{"version":3,"sources":["services/persons.js","Components/AddRecord.js","Components/Records.js","Components/Filter.js","Components/Notification.js","App.js","index.js"],"names":["apiUrl","axios","get","then","response","data","newRecord","post","id","delete","status","console","log","put","AddRecord","newName","setNewName","newNumber","setNewNumber","persons","setPersons","updateRecord","setNotification","onSubmit","event","preventDefault","name","number","every","person","phonebookService","returnedRecord","concat","content","type","catch","error","message","window","confirm","changedRecord","find","p","target","value","onChange","placeholder","Record","deleteRecord","onClick","Records","map","key","Filter","setFilterTerm","Notification","notification","text","toLocaleLowerCase","className","setTimeout","App","useState","filterTerm","useEffect","initialData","filteredRecords","filter","includes","recordToUpdate","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95de6928.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"/\";\r\nconst apiUrl = `${baseUrl}api/persons`;\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(apiUrl);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst addRecord = newRecord => {\r\n  const request = axios.post(apiUrl, newRecord);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst deleteRecord = id => {\r\n  const request = axios.delete(`${apiUrl}/${id}`);\r\n  return request.then(response => response.status);\r\n};\r\n\r\nconst updateRecord = newRecord => {\r\n  console.log(baseUrl);\r\n  const request = axios.put(`${apiUrl}/${newRecord.id}`, newRecord);\r\n  return request.then(response => response);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  addRecord,\r\n  deleteRecord,\r\n  updateRecord\r\n};\r\n","import React from 'react';\r\nimport phonebookService from '../services/persons';\r\n\r\nconst AddRecord = ({\r\n  newName,\r\n  setNewName,\r\n  newNumber,\r\n  setNewNumber,\r\n  persons,\r\n  setPersons,\r\n  updateRecord,\r\n  setNotification\r\n}) => {\r\n  const verifyName = () => {\r\n    return persons.every(person => {\r\n      if (newName === person.name) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n  };\r\n\r\n  const handleNameOnChange = event => {\r\n    setNewName(event.target.value);\r\n  };\r\n  const handleNumberOnChange = event => {\r\n    setNewNumber(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const newRecord = {\r\n      name: newName,\r\n      number: newNumber\r\n    };\r\n\r\n    if (!verifyName()) {\r\n      const changeNumber = window.confirm(\r\n        `${newName} is already in the phonebook, replace the old one with a new one?`\r\n      );\r\n\r\n      if (changeNumber) {\r\n        const changedRecord = {\r\n          ...persons.find(p => p.name === newName),\r\n          number: newNumber\r\n        };\r\n        updateRecord(changedRecord);\r\n      }\r\n    } else {\r\n      phonebookService\r\n        .addRecord(newRecord)\r\n        .then(returnedRecord => {\r\n          setPersons(persons.concat(returnedRecord));\r\n          setNotification({\r\n            content: 'Record added successfully!',\r\n            type: 'success'\r\n          });\r\n        })\r\n        .catch(error => {\r\n          if (error.response.status === 400) {\r\n            setNotification({\r\n              content: error.response.data.message,\r\n              type: 'danger'\r\n            });\r\n          }\r\n        });\r\n    }\r\n    event.target.name.value = '';\r\n    event.target.number.value = '';\r\n    setNewName('');\r\n    setNewNumber('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Add a new</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Name: </label>\r\n          <input\r\n            name=\"name\"\r\n            onChange={handleNameOnChange}\r\n            placeholder=\"Enter a new name\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Number: </label>\r\n          <input\r\n            name=\"number\"\r\n            onChange={handleNumberOnChange}\r\n            placeholder=\"Enter a new number\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddRecord;\r\n","import React from \"react\";\r\n\r\nconst Record = ({ person, deleteRecord }) => {\r\n  const handleDeleteClick = () => {\r\n    if (window.confirm(`Delete ${person.name}?`)) {\r\n      deleteRecord(person.id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <p>\r\n      {person.name} {person.number} &nbsp;\r\n      <button onClick={handleDeleteClick}>delete</button>\r\n    </p>\r\n  );\r\n};\r\n\r\nconst Records = ({ persons, deleteRecord }) => {\r\n  return (\r\n    <div>\r\n      <h2>Numbers</h2>\r\n      {persons.map(person => {\r\n        return (\r\n          <Record\r\n            key={person.name}\r\n            person={person}\r\n            deleteRecord={deleteRecord}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Records;\r\n","import React from \"react\";\r\n\r\nconst Filter = ({ setFilterTerm }) => {\r\n  const handleSearchOnChange = event => {\r\n    setFilterTerm(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label>Filter shown with: </label>\r\n      <input onChange={handleSearchOnChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ notification, setNotification }) => {\r\n  if (notification.content === null || notification.content === \"\") {\r\n    return null;\r\n  }\r\n\r\n  let text = \"\";\r\n\r\n  switch (notification.type.toLocaleLowerCase()) {\r\n    case \"success\":\r\n      text = \"Success: \";\r\n      break;\r\n    case \"info\":\r\n      text = \"Info: \";\r\n      break;\r\n    case \"warning\":\r\n      text = \"Warning: \";\r\n      break;\r\n    case \"danger\":\r\n      text = \"Danger: \";\r\n      break;\r\n    default:\r\n      setNotification({ content: null, type: \"info\" });\r\n  }\r\n\r\n  const startTimout = sec => {\r\n    setTimeout(() => {\r\n      setNotification({ content: null, type: \"info\" });\r\n    }, 1000 * sec);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={\"alert \" + notification.type}>\r\n        <span>{text}</span>\r\n        {notification.content}\r\n      </div>\r\n      {startTimout(5)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from 'react';\r\nimport phonebookService from './services/persons';\r\nimport AddRecord from './Components/AddRecord';\r\nimport Records from './Components/Records';\r\nimport Filter from './Components/Filter';\r\nimport Notification from './Components/Notification';\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState('');\r\n  const [newNumber, setNewNumber] = useState('');\r\n  const [filterTerm, setFilterTerm] = useState('');\r\n  const [notification, setNotification] = useState({\r\n    content: null,\r\n    type: 'info'\r\n  });\r\n\r\n  useEffect(() => {\r\n    phonebookService.getAll().then(initialData => {\r\n      setPersons(initialData);\r\n    });\r\n  }, []);\r\n\r\n  const filteredRecords = persons.filter(person => {\r\n    if (filterTerm === '') {\r\n      return person;\r\n    }\r\n    const lowerCaseName = person.name.toLocaleLowerCase();\r\n    return lowerCaseName.includes(filterTerm.toLocaleLowerCase());\r\n  });\r\n\r\n  const deleteRecord = id => {\r\n    phonebookService\r\n      .deleteRecord(id)\r\n      .then(response => {\r\n        if (response === 204) {\r\n          setNotification({\r\n            content: `The entry has been deleted!`,\r\n            type: 'info'\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        const errorCode = error.response.status;\r\n        if (errorCode === 404) {\r\n          setNotification({\r\n            content: `This record is not in phonebook or has already been deleted`,\r\n            type: 'danger'\r\n          });\r\n        }\r\n      });\r\n    setPersons(persons.filter(person => person.id !== id));\r\n  };\r\n\r\n  const updateRecord = recordToUpdate => {\r\n    phonebookService\r\n      .updateRecord(recordToUpdate)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          setNotification({\r\n            content: 'Record has been updated successfully!',\r\n            type: 'success'\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        const errorCode = error.response.status;\r\n        if (errorCode === 404) {\r\n          setNotification({\r\n            content: `This record is not in phonebook or has already been delted`,\r\n            type: 'danger'\r\n          });\r\n        }\r\n      });\r\n    setPersons(\r\n      persons.map(p => (p.id !== recordToUpdate.id ? p : recordToUpdate))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <Notification\r\n        notification={notification}\r\n        setNotification={setNotification}\r\n      />\r\n      <Filter setFilterTerm={setFilterTerm} />\r\n      <AddRecord\r\n        newName={newName}\r\n        setNewName={setNewName}\r\n        newNumber={newNumber}\r\n        setNewNumber={setNewNumber}\r\n        persons={persons}\r\n        setPersons={setPersons}\r\n        updateRecord={updateRecord}\r\n        setNotification={setNotification}\r\n      />\r\n      <Records persons={filteredRecords} deleteRecord={deleteRecord} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App'\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}